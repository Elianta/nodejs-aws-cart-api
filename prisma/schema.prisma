generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CartItem {
  cartId    String @map("cart_id") @db.Uuid
  productId String @map("product_id") @db.Uuid
  count     Int
  cart      Cart   @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([cartId, productId])
  @@map("cart_items")
}

model Cart {
  id        String     @id @default(uuid()) @db.Uuid
  userId    String     @map("user_id") @db.Uuid
  status    CartStatus @default(OPEN)
  cartItems CartItem[]
  order     Order?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("carts")
}

enum CartStatus {
  OPEN
  ORDERED

  @@map("cart_status")
}

model TestConnection {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")

  @@map("test_connections")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @unique
  email     String?
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

enum OrderStatus {
  OPEN
  APPROVED
  CONFIRMED
  SENT
  COMPLETED
  CANCELLED

  @@map("order_status")
}

model Order {
  id       String      @id @default(uuid()) @db.Uuid
  userId   String      @map("user_id") @db.Uuid
  cartId   String      @unique @map("cart_id") @db.Uuid
  cart     Cart        @relation(fields: [cartId], references: [id])
  status   OrderStatus @default(OPEN)
  total    Float
  payment  Json?
  delivery Json?
  comments String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("orders")
}
